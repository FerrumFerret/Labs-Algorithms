#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;

int coins[] = {1, 50, 90};

int mon(int n)
{
	if (n <= 0) return 0;
	int *arr = new int[n + 1];
	arr[0] = 0;
	int *arr0 = new int[n + 1];
	arr0[0] = 0;
	int *arr1 = new int[n + 1];
	arr1[0] = 0;
	int *arr2 = new int[n + 1];
	arr2[0] = 0;
	for (int i = 1; i <= n; ++i)
	{
		if ((i >= coins[0]) && (i < coins[1])) 
		{
			arr[i] = 1 + arr[i - coins[0]];
			arr0[i]= 1 + arr[i - coins[0]];
			arr1[i] = arr1[i - coins[0]];
			arr2[i] = arr2[i - coins[0]];
		}
		if ((i >= coins[1]) && (i < coins[2])) 
		{
			arr[i] = 1 + min(arr[i - coins[0]], arr[i - coins[1]]);
			arr0[i] = 1 + min(arr0[i - coins[0]], arr0[i - coins[1]]);
			arr1[i] = 1 + min(arr1[i - coins[0]], arr1[i - coins[1]]);
			arr2[i] = min(arr2[i - coins[0]], arr2[i - coins[1]]);
		}
		if ((i >= coins[2])) 
		{
			arr[i] = 1 + min(arr[i - coins[0]], min(arr[i - coins[1]], arr[i - coins[2]]));
			if (min(arr[i - coins[0]], min(arr[i - coins[1]], arr[i - coins[2]])) == arr[i-coins[0]])
			{ arr0[i] = arr0[i - coins[0]] + 1;  arr1[i] = arr1[i - coins[0]];  arr2[i] = arr2[i - coins[0]];
			}
			else
				if (min(arr[i - coins[0]], min(arr[i - coins[1]], arr[i - coins[2]])) == arr[i - coins[1]])
				{ arr1[i] = arr1[i - coins[1]] + 1; arr0[i] = arr0[i - coins[1]];  arr2[i] = arr2[i - coins[1]];
			}
				else { arr2[i] = arr2[i - coins[2]] + 1; arr1[i] = arr1[i - coins[2]]; arr0[i] = arr0[i - coins[2]]; }
		}
		if ((i % coins[1] == 0) || (i % coins[2] == 0)) arr0[i] = 0;
	}
	cout << "Amount of coins: " << arr[n] << endl << coins[0] << " - " << arr0[n] << ", " << coins[1] << " - " << arr1[n] << ", " << coins[2] << " - " << arr2[n] << endl;
	int result = arr[n];
	delete[] arr;
	return result;
}

int main() {

	int n = 100;
	//cout << "Change: "; cin >> n;
	//cout << "Nominals: " << endl;
	//for (int i = 0; i < 3; i++) {
	//	cin >> coins[i]; }
	
	mon(n);

	return 0;
}
